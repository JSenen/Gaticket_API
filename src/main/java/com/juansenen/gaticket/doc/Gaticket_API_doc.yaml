openapi: 3.0.1
info:
  title: GATICKET-API
  description: API description in Markdown.
  version: 1.0.0
servers:
  - url: ''
tags:
  - name: users
  - name: devices
  - name: types
  - name: net
  - name: units
  - name: incidences
paths:
  /devices/findAllDevices:
    get:
      tags:
        - devices
      summary: Get all devices on Data Base
      description: List of all devices on data base
      operationId: findAllDevices
      responses:
        '200':
          description: Se devuelve un listado con todos los dispositivos de la base de datos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Devices'
              examples:
                Line1:
                  $ref: '#/components/examples/AllDevices'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /devices/findByMac:
    get:
      tags:
        - devices
      summary: Get device by mac
      description: Get devices typing his nic mac
      operationId: findDeviceByMac
      parameters:
        - name: mac
          in: query
          description: MAC of the device
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Show a device search by the mac of his nic
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Devices'
              examples:
                Device:
                  $ref: '#/components/examples/Device1'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFoundException'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /devices/findBySerialNumber:
    get:
      tags:
        - devices
      summary: Get device by Serial Number
      description: Ahow device with serial number
      operationId: findDevicesBySerialNumber
      parameters:
        - name: serial_number
          in: query
          description: Unique Idetification serial number
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Se devuelve los datos del dispositivo seleccionado por el cliente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Devices'
              examples:
                Device1:
                  $ref: '#/components/examples/Device1'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFoundException'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  # Ejemplos
  examples:
    Device1:
      summary: Ejemplo dispositivo
      value:
          deviceId: 23
          device_hd: 240
          device_ram: 32
          device_mac: '05:67:BF:65:AD'
          device_serial: 'FGH435T'
          device_model: 'HP ElitePro'
          device_datebuy: 12/04/2013
          device_datestart: 03/12/2013
    AllDevices:
      summary: Ejemplo array de dispositivos
      value:
        - deviceId: 23
          device_hd: 240
          device_ram: 32
          device_mac: '05:67:BF:65:AD'
          device_serial: 'FGH435T'
          device_model: 'HP ElitePro'
          device_datebuy: 12/04/2013
          device_datestart: 03/12/2013
        - deviceId: 243
          device_hd: 500
          device_ram: 16
          device_mac: '12:12:BF:65:E5'
          device_serial: 'CZC6757'
          device_model: 'Travel Mate'
          device_datebuy: 01/11/2020
          device_datestart: 30/09/2023


  schemas:
    Devices:
      type: object
      properties:
        deviceId:
          type: integer
          format: int64
          example: 12
        device_hd:
          type: integer
          format: int64
          example: 250
        device_ram:
          type: integer
          format: int64
          example: 16
        device_mac:
          type: string
          example: '84:32:34:CB:DF:45'
        device_serial:
          type: string
          example: 'KBC456CD'
        device_model:
          type: string
          example: 'EliteBook'
        device_datebuy:
          type: integer
          format: date
          example: 12/04/2013
        device_datestart:
          type: integer
          format: date
          example: 12/06/2014
    Net:
      type: object
      properties:
        netId:
          type: integer
          format: int64
          example: 4
        net:
          type: string
          example: '10.52.2.12'
    Departments:
      type: object
      properties:
        departmentId:
          type: integer
          format: int64
          example: 23
        department_name:
          type: string
          example: 'Apoyo Logistico'
        department_phone:
          type: string
          example: '07000148'
        department_mail:
          type: string
          format: email
          example: 'alogistico@gmail.com'
        department_city:
          type: string
          example: 'Barcelona'
    Users:
      type: object
      properties:
        userId:
          type: integer
          format: int64
          example: 45
        user_mail:
          type: string
          format: email
          example: 'pepito@gmail.com'
        user_password:
          type: string
          format: password
          example: '1234pepito'
        user_rol:
          type: string
          example: 'user'
    Incidences:
      type: object
      properties:
        incidenceId:
          type: integer
          format: int64
          example: 56
        incidence_status:
          type: boolean
          example: true
    Types:
      type: object
      properties:
        typeId:
          type: integer
          format: int64
          example: 43
        type:
          type: string
          example: 'Ordenador sobremesa'
    BadRequest:
      properties:
        errorCode:
          type: number
          format: int32
          example: 404
        message:
          type: string
          example: Bad Request
    NotFound:
      properties:
        errorCode:
          type: number
          format: int32
          example: 404
    ErrorResponse:
      properties:
        errorCode:
          type: number
          format: int32
          example: 500
        message:
          type: string
          example: Validation error

  responses:
    BadRequest:
      description: Solicitud realizada por el cliente no pudo ser procesada debido a un error en la solicitud. Esto podría deberse a una solicitud malformada, a la ausencia de información requerida en la solicitud o a una solicitud que no cumple con los requisitos del servidor.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequest'
          example:
            errorCode: 400
            message: 'Bad Request'
    NotFoundException:
      description: El servidor no pudo encontrar el recurso solicitado. Es decir, el servidor no puede encontrar la linea  que se está buscando.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFound'
          example:
            errorCode: 404
            message: 'Object not found'
    InternalServerError:
      description: se ha producido un error interno en el servidor al procesar la solicitud del cliente
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            errorCode: 500
            message: "Internal server error"

