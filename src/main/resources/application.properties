# MySQL

# Configuracion para el acceso a la Base de Datos
# :create --> Crea el esquema de datos desde 0 en cada inicio. Borra todos los datos
# :validate --> Valida esquema de la base de datos buscando inconsistencias. Pero no realiza cambios
# :noce --> no hace nada
# :update --> actuliza la base con los cambios

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.globally_quoted_identifiers=false

#La transaccion permanece cerrada en la vista para evitar consultas adicionales+
#spring.jpa.open-in-view=false

# Puerto donde escucha el servidor una vez se inicie
server.port=8080

# Datos de conexion con la base de datos MySQL
spring.datasource.url=jdbc:mysql://localhost:3306/gaticketdb
# spring.datasource.url=jdbc:mysql://mysql_db:3306/gaticketdb
spring.datasource.username=myuser
spring.datasource.password=mypass

# Configuracion actuator
# http://localhost:8080/actuator
# Examples: http://localhost:8080/actuator/metrics/application.ready.time
#           http://localhost:8080/actuator/metrics
#           http://localhost:8080/actuator/metrics/jdbc.connections.active
# This property enables the openapi and swagger-ui endpoints to be exposed beneath the actuator base path.
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always


# Configuracion Swagger http://localhost:8080/swagger-ui/index.html
# Fichero Yaml          http://localhost:8080/v3/api-docs.yaml
springdoc.swagger-ui.operationsSorter=method
#Configuracion para que solo muestre los endpoints de los controller
#springdoc.packages-to-scan=com.juansenen.gaticket.controllers
# Paths to include
# springdoc.pathsToMatch=/v1, /users/*
# formato salida de datos
springdoc.default-consumes-media-type: application/json
#springdoc.use-management-port=true
# This property enables the openapi and swagger-ui endpoints to be exposed beneath the actuator base path.


